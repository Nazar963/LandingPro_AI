version: '3.8'

services:
  # Production Frontend with Nginx
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
    networks:
      - landingpro-network
    restart: unless-stopped

  # Production Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
      - AI_SERVICE_URL=http://ai-service:5000
    env_file:
      - .env.production
    depends_on:
      - ai-service
      - redis
    networks:
      - landingpro-network
    restart: unless-stopped

  # AI Service in Production
  ai-service:
    build:
      context: ./Text_generative_AI
      dockerfile: Dockerfile
    environment:
      - FLASK_ENV=production
      - FLASK_DEBUG=False
    env_file:
      - .env.production
    volumes:
      - ai-models:/app/models
    networks:
      - landingpro-network
    restart: unless-stopped

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    volumes:
      - redis-data:/data
    networks:
      - landingpro-network
    restart: unless-stopped

  # Nginx Load Balancer/Reverse Proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - landingpro-network
    restart: unless-stopped

volumes:
  redis-data:
  ai-models:

networks:
  landingpro-network:
    driver: bridge
